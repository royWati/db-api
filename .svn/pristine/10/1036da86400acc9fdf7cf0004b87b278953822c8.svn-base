create or replace NONEDITIONABLE PROCEDURE "A_SP_CUSTOMER_LOGIN" (
    IV_PHONENUMBER IN VARCHAR2,
    IV_IMEI_IMSI   IN VARCHAR2,
    IV_PIN         IN VARCHAR,
    IV_CHANNEL     IN VARCHAR,
    C_1            IN OUT SYS_REFCURSOR)
AS
  V_COUNT NUMBER                      :=0;
  V_COUNT_WHITELISTED NUMBER          :=0; -- TO BE REMOVED WHEN IN PROD
  V_ACTIVE NVARCHAR2(50)              :='';
  V_PIN NVARCHAR2(200)                 :='';
  V_IMEI_IMSI NVARCHAR2(50)           :='';
  V_IMSI NVARCHAR2(50)                :='';
  V_TRIALS NUMBER                     :=0;
  V_IDENTIFICATION_ID NVARCHAR2(50)   :='';
  V_DATE_OF_BIRTH NVARCHAR2(50)       :='';
  V_FIRST_NAME NVARCHAR2(50)          :='';
  V_SECOND_NAME NVARCHAR2(50)         :='';
  V_LAST_NAME NVARCHAR2(50)           :='';
  V_PARTIAL_REGISTRATION NVARCHAR2(50):='';
  V_PHONE_NUMBER NVARCHAR2(50)        :='';
  V_FIRST_LOGIN NVARCHAR2(50)         :='';
  V_EMAIL_ADDRESS NVARCHAR2(50)       :='';
  V_GENDER NVARCHAR2(50)              :='';
  V_LANG NVARCHAR2(5)                 :='';
  V_REFERRAL_CODE NVARCHAR2(20)       := '';
    V_MWALLET_ACCOUNT NVARCHAR2(50)              :='';
        V_LINKED_ACCOUNTS NVARCHAR2(2000)              :='';

 V_ACTUAL_BAL NVARCHAR2(50) := '' ;
V_LOYALITY_ACTUAL_BAL NVARCHAR2(50) := '' ;
V_REMANAING_ATTEMPTS NUMBER :=0;

V_VALIDATION_ID NUMBER(18) :=0;
BEGIN

 -- BEGIN--first check if customer is whitelisted [ To remove this on production]
 --   SELECT COUNT(1)
 --   INTO V_COUNT_WHITELISTED
 --   FROM DUAL
  --  WHERE EXISTS
  --    (SELECT ID
 --     FROM TB_CUSTOMER_WHITELIST
  --    WHERE MOBILE_NUMBER =IV_PHONENUMBER
--	  AND IS_WHITELIST  =1
  --    AND ROWNUM         =1
  --    );
  --  IF V_COUNT_WHITELISTED < 1 THEN
  --    OPEN C_1 FOR SELECT '21' AS RESP_CODE,'You are not allowed to access this service' AS RESP_DESC FROM dual;
   --   RETURN;
 --   END IF;
 -- END;

  BEGIN--first check if customer exists
    SELECT COUNT(1)
    INTO V_COUNT
    FROM DUAL
    WHERE EXISTS
      (SELECT ID
      FROM VW_ALLCUSTOMERS
      WHERE PHONE_NUMBER =IV_PHONENUMBER
      AND ROWNUM         =1
      );
    IF V_COUNT < 1 THEN
      OPEN C_1 FOR SELECT '01' AS RESP_CODE,'Customer Not found' AS RESP_DESC FROM dual;
      RETURN;
    END IF;
  END;
BEGIN
  IF V_COUNT > 0 THEN
    SELECT ACTIVE,
      NVL(PIN,0) AS PIN,
      CASE
        WHEN TRIM(IV_IMEI_IMSI) = 'USSD'
        THEN NVL(IMSI,0)
        ELSE NVL(IMEI,0)
      END V_IMEI_IMSI,
      NVL(TRIALS,0) AS TRIALS,
      IDENTIFICATION_ID,
      DATE_OF_BIRTH,
      FIRST_NAME,
      SECOND_NAME,
      LAST_NAME,
      PARTIAL_REGISTRATION,
      PHONE_NUMBER,
      FIRST_LOGIN,
      EMAIL_ADDRESS,
      GENDER,
      LANG,MWALLET_ACCOUNT,REFERRAL_CODE
    INTO V_ACTIVE,
      V_PIN,
      V_IMEI_IMSI,
      V_TRIALS,
      V_IDENTIFICATION_ID,
      V_DATE_OF_BIRTH,
      V_FIRST_NAME,
      V_SECOND_NAME,
      V_LAST_NAME,
      V_PARTIAL_REGISTRATION,
      V_PHONE_NUMBER,
      V_FIRST_LOGIN,
      V_EMAIL_ADDRESS,
      V_GENDER,
      V_LANG,V_MWALLET_ACCOUNT,V_REFERRAL_CODE
    FROM VW_ALLCUSTOMERS
    WHERE PHONE_NUMBER =IV_PHONENUMBER
    AND ROWNUM         =1;
  END IF;
END;
BEGIN --Validations

  IF IV_CHANNEL = 'USSD' THEN -- CHECK IF THE CHANNEL IS A USSD CHANNEL
       IF V_IMEI_IMSI != IV_IMEI_IMSI THEN
          OPEN C_1 FOR SELECT '02' AS RESP_CODE,'You have changed your Sim card' AS RESP_DESC FROM dual;
        RETURN;
      END IF;

      -- CHECK IF THE ACCOUNT IS BLOCKED

      IF V_ACTIVE = 0 THEN
          OPEN C_1 FOR SELECT '03' AS RESP_CODE,'Account is blocked' AS RESP_DESC FROM dual;
          RETURN;
      END IF;


  ELSE -- CHECK ANY OTHER CHANNEL
      IF V_IMSI != IV_IMEI_IMSI THEN
        OPEN C_1 FOR SELECT '02' AS RESP_CODE,'You have changed your Device' AS RESP_DESC FROM dual;
        RETURN;

        ELSIF V_ACTIVE =0 THEN --
        OPEN C_1 FOR SELECT '05' AS  RESP_CODE, 'Account Blocked' AS RESP_DESC FROM dual;
        RETURN;

--        ELSIF V_TRIALS >= 3 THEN
--          UPDATE TB_CUSTOMER_VALIDATION
--          SET ACTIVE        = 0,TRIALS        = V_TRIALS+1
--          WHERE CUSTOMER_NO = IV_PHONENUMBER
--          AND ROWNUM        =1;
--          OPEN C_1 FOR SELECT '04' AS RESP_CODE, '3 Wrong Attempts PIN Blocked' AS RESP_DESC FROM dual;
--          RETURN;
--
      ELSIF V_PIN != IV_PIN THEN
        UPDATE TB_CUSTOMER_VALIDATION
        SET TRIALS        = V_TRIALS+1
        WHERE CUSTOMER_NO = IV_PHONENUMBER
        AND ROWNUM        =1;


        V_TRIALS :=V_TRIALS+1;

        IF V_TRIALS = 3 THEN
              UPDATE TB_CUSTOMER_VALIDATION
                SET ACTIVE        = 0,TRIALS        = V_TRIALS+1
                 WHERE CUSTOMER_NO = IV_PHONENUMBER
             AND ROWNUM        =1;
          OPEN C_1 FOR SELECT '04' AS RESP_CODE, '3 Wrong Attempts PIN Blocked' AS RESP_DESC FROM dual;
        ELSE
             V_REMANAING_ATTEMPTS := 3 - V_TRIALS;
            OPEN C_1 FOR SELECT '03' AS RESP_CODE, 'Invalid PIN. '||V_REMANAING_ATTEMPTS || 'attempts left.' AS  RESP_DESC FROM dual;
           RETURN;

        END IF;


      END IF;

  END IF;
END;
IF V_COUNT > 0 THEN

dbms_output.put_line('no of trials '||V_TRIALS);
IF V_TRIALS > 0 THEN


    SELECT ID INTO V_VALIDATION_ID FROM tb_customer_validation WHERE phone_number = v_phone_number and ROWNUM = 1;
    UPDATE tb_customer_validation SET TRIALS = 0 WHERE ID = V_VALIDATION_ID ;
END IF;
V_LINKED_ACCOUNTS:= FN_GET_LINKED_ACCOUNTS(V_PHONE_NUMBER);
  -- FETCH ACTUAL BALANCE
  SELECT ACTUAL_BAL INTO V_ACTUAL_BAL FROM TB_ACCOUNT WHERE CUSTOMER_NO = V_PHONE_NUMBER AND ACCOUNT_CLASS = '256' AND ROWNUM = 1;
 -- SELECT ACTUAL_BAL INTO V_LOYALITY_ACTUAL_BAL FROM TB_ACCOUNT WHERE CUSTOMER_NO = V_PHONE_NUMBER AND ACCOUNT_CLASS = '207' AND ROWNUM = 1;

  OPEN C_1 FOR SELECT '00' AS  RESP_CODE, 'Success' AS RESP_DESC, V_ACTIVE AS ACTIVE,
  V_PIN AS PIN,
  V_TRIALS AS TRIALS,
  V_IDENTIFICATION_ID AS IDENTIFICATION_ID,
  V_DATE_OF_BIRTH AS DATE_OF_BIRTH,
  V_FIRST_NAME AS FIRST_NAME,
  V_SECOND_NAME AS SECOND_NAME,
  V_LAST_NAME AS LAST_NAME,
  V_PARTIAL_REGISTRATION AS PARTIAL_REGISTRATION,
  V_PHONE_NUMBER AS PHONE_NUMBER,
  V_FIRST_LOGIN AS FIRST_LOGIN,
  V_EMAIL_ADDRESS AS EMAIL_ADDRESS,
  V_GENDER AS GENDER,
  V_LANG AS LANG,V_MWALLET_ACCOUNT AS MWALLET_ACCOUNT,
  V_REFERRAL_CODE AS REFERRAL_CODE,
  V_LINKED_ACCOUNTS AS LINKED_ACCOUNTS,
  V_ACTUAL_BAL AS ACTUAL_BALANCE,
  V_LOYALITY_ACTUAL_BAL AS LOYALITY_POINT_BALANCE FROM DUAL;
  RETURN;
END IF;
END;